https://leetcode.com/problems/integer-to-roman/description/

public class Solution {
    public string IntToRoman(int num) {
        
      Dictionary<int, string> IntToRomanMap = new Dictionary<int, string>
            {
                {0, ""},
                {1, "I"},
                {2, "II"},
                {3, "III"},
                {4, "IV"},
                {5, "V"},
                {6, "VI"},
                {7, "VII"},
                {8, "VIII"},
                {9, "IX"},
                {10, "X"},
                {20, "XX"},
                {30, "XXX"},
                {40, "XL"},
                {50, "L"},
                {60, "LX"},
                {70, "LXX"},
                {80, "LXXX"},
                {90, "XC"},
                {100, "C"},
                {200, "CC"},
                {300, "CCC"},
                {400, "CD"},
                {500, "D"},
                {600, "DC"},
                {700, "DCC"},
                {800, "DCCC"},
                {900, "CM"},
                {1000, "M"},
                {2000, "MM"},
                {3000, "MMM"}
            };
            int thousands = 0, hundreds = 0, tens = 0, ones = 0;

            thousands = Convert.ToInt32(Math.Floor(num / 1000.0));
            num = num % 1000;
            hundreds = Convert.ToInt32(Math.Floor(num / 100.0));
            num = num % 100;
            tens = Convert.ToInt32(Math.Floor(num / 10.0));
            ones = num % 10;

            String RomanValueOfNum = "";

            
            RomanValueOfNum += IntToRomanMap[thousands*1000];
            RomanValueOfNum += IntToRomanMap[hundreds * 100];
            RomanValueOfNum += IntToRomanMap[tens * 10];
            RomanValueOfNum += IntToRomanMap[ones];

            return RomanValueOfNum;
        }  

    }
